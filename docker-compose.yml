version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: siem
      POSTGRES_USER: siem_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-siem_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U siem_user -d siem"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery backend
  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ for message queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-siem}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-siem_password}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Web Application
  web:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://siem_user:${DB_PASSWORD:-siem_password}@postgres:5432/siem
      REDIS_URL: redis://redis:6379/0
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-siem}:${RABBITMQ_PASSWORD:-siem_password}@rabbitmq:5672/
      SESSION_SECRET: ${SESSION_SECRET:-dev-secret-change-me}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://siem_user:${DB_PASSWORD:-siem_password}@postgres:5432/siem
      REDIS_URL: redis://redis:6379/0
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-siem}:${RABBITMQ_PASSWORD:-siem_password}@rabbitmq:5672/
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./logs:/app/logs

  # Celery Beat Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      - worker
    command: celery -A celery_worker beat --loglevel=info
    environment:
      DATABASE_URL: postgresql://siem_user:${DB_PASSWORD:-siem_password}@postgres:5432/siem
      REDIS_URL: redis://redis:6379/0
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-siem}:${RABBITMQ_PASSWORD:-siem_password}@rabbitmq:5672/
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  logs:
